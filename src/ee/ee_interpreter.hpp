#pragma once

#include "types.hpp"

namespace ee::interpreter {
void add(u32 rs, u32 rt, u32 rd);
void addi(u32 rs, u32 rt, s16 imm);
void addiu(u32 rs, u32 rt, s16 imm);
void addu(u32 rs, u32 rt, u32 rd);
void and_(u32 rs, u32 rt, u32 rd);
void andi(u32 rs, u32 rt, s16 imm);
void beq();
void beql();
void bgez();
void bgezl();
void bgtz();
void bgtzl();
void blez();
void blezl();
void bltz();
void bltzl();
void bne();
void bnel();
void break_();
void cache();
void dadd(u32 rs, u32 rt, u32 rd);
void daddi(u32 rs, u32 rt, s16 imm);
void daddiu(u32 rs, u32 rt, s16 imm);
void daddu(u32 rs, u32 rt, u32 rd);
void div();
void divu();
void dsll();
void dsll32();
void dsllv();
void dsra();
void dsra32();
void dsrav();
void dsrl();
void dsrl32();
void dsrlv();
void dsub(u32 rs, u32 rt, u32 rd);
void dsubu(u32 rs, u32 rt, u32 rd);
void j();
void jal();
void jalr();
void jr();
void lb();
void lbu();
void ld();
void ldl();
void ldr();
void lh();
void lhu();
void lq();
void lw();
void lwl();
void lwr();
void lwu();
void lui(u32 rs, u32 rt, s16 imm);
void mfhi();
void mflo();
void mthi();
void mtlo();
void mult();
void multu();
void nor(u32 rs, u32 rt, u32 rd);
void or_(u32 rs, u32 rt, u32 rd);
void ori(u32 rs, u32 rt, s16 imm);
void sb();
void sd();
void sdl();
void sdr();
void sh();
void sll();
void sllv();
void slt(u32 rs, u32 rt, u32 rd);
void slti(u32 rs, u32 rt, s16 imm);
void sltiu(u32 rs, u32 rt, s16 imm);
void sltu(u32 rs, u32 rt, u32 rd);
void sq();
void sra();
void srav();
void srl();
void srlv();
void sub(u32 rs, u32 rt, u32 rd);
void subu(u32 rs, u32 rt, u32 rd);
void sw();
void swl();
void swr();
void sync();
void syscall();
void xor_(u32 rs, u32 rt, u32 rd);
void xori(u32 rs, u32 rt, s16 imm);

void lwc1();
void swc1();

void lqc2();
void sqc2();

void paddb();
void paddh();
void paddw();
void paddsb();
void paddsh();
void paddsw();
void pcgtb();
void pcgth();
void pcgtw();
void pext5();
void pextlb();
void pextlh();
void pextlw();
void pmaxh();
void pmaxw();
void ppac5();
void ppacb();
void ppach();
void ppacw();
void psubb();
void psubh();
void psubw();
void psubsb();
void psubsh();
void psubsw();

void vaddw();
void vaddx();
void vaddy();
void vaddz();
} // namespace ee::interpreter
